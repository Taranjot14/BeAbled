{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\himat\\\\OneDrive\\\\desktop\\\\aslproject\\\\webrtc-asl\\\\src\\\\VideoCapture.tsx\",\n  _s = $RefreshSig$();\n// src/VideoCapture.tsx\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCapture = () => {\n  _s();\n  const videoRef = useRef(null);\n  useEffect(() => {\n    async function startCamera() {\n      try {\n        // Request the camera\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        // If we got a video ref, attach the stream\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      } catch (error) {\n        console.error('Error accessing camera:', error);\n      }\n    }\n    startCamera();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Local Camera Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: {\n        width: '640px',\n        height: '480px',\n        backgroundColor: 'black'\n      },\n      autoPlay: true,\n      playsInline: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCapture, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c = VideoCapture;\nexport default VideoCapture;\nvar _c;\n$RefreshReg$(_c, \"VideoCapture\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","VideoCapture","_s","videoRef","startCamera","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","width","height","backgroundColor","autoPlay","playsInline","muted","_c","$RefreshReg$"],"sources":["C:/Users/himat/OneDrive/desktop/aslproject/webrtc-asl/src/VideoCapture.tsx"],"sourcesContent":["// src/VideoCapture.tsx\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nconst VideoCapture: React.FC = () => {\r\n  const videoRef = useRef<HTMLVideoElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    async function startCamera() {\r\n      try {\r\n        // Request the camera\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        // If we got a video ref, attach the stream\r\n        if (videoRef.current) {\r\n          videoRef.current.srcObject = stream;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error accessing camera:', error);\r\n      }\r\n    }\r\n\r\n    startCamera();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Local Camera Feed</h2>\r\n      <video\r\n        ref={videoRef}\r\n        style={{ width: '640px', height: '480px', backgroundColor: 'black' }}\r\n        autoPlay\r\n        playsInline\r\n        muted\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCapture;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGL,MAAM,CAA0B,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd,eAAeO,WAAWA,CAAA,EAAG;MAC3B,IAAI;QACF;QACA,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC;QACzE;QACA,IAAIN,QAAQ,CAACO,OAAO,EAAE;UACpBP,QAAQ,CAACO,OAAO,CAACC,SAAS,GAAGN,MAAM;QACrC;MACF,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF;IAEAR,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEJ,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BlB,OAAA;MACEmB,GAAG,EAAEhB,QAAS;MACdiB,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE,OAAO;QAAEC,eAAe,EAAE;MAAQ,CAAE;MACrEC,QAAQ;MACRC,WAAW;MACXC,KAAK;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CAhCID,YAAsB;AAAA0B,EAAA,GAAtB1B,YAAsB;AAkC5B,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}