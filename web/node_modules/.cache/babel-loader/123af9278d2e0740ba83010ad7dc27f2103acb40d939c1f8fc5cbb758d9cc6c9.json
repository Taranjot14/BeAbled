{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\himat\\\\OneDrive\\\\desktop\\\\BeAbled\\\\aslproject\\\\webrtc-asl\\\\src\\\\VideoCall.tsx\",\n  _s = $RefreshSig$();\n// src/VideoCall.tsx\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCall = () => {\n  _s();\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const [peerConnection, setPeerConnection] = useState(null);\n  const ws = useRef(null);\n\n  // Hardcode one tab to be caller, the other tab to be callee\n  // For the \"caller\" tab, set isCaller = true\n  // For the \"callee\" tab, set isCaller = false\n  const isCaller = true;\n  useEffect(() => {\n    // 1) Create RTCPeerConnection with a public STUN server\n    const pc = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }]\n    });\n    setPeerConnection(pc);\n\n    // 2) Handle remote stream\n    pc.ontrack = event => {\n      if (remoteVideoRef.current) {\n        remoteVideoRef.current.srcObject = event.streams[0];\n      }\n    };\n\n    // 3) Connect to WebSocket signaling server\n    ws.current = new WebSocket('ws://localhost:8080');\n\n    // 4) When we receive a message, handle offer/answer/ice\n    ws.current.onmessage = async event => {\n      // Skip non-string data (like Blobs)\n      if (typeof event.data !== 'string') {\n        console.warn('Non-text message, ignoring:', event.data);\n        return;\n      }\n      let data;\n      try {\n        data = JSON.parse(event.data);\n      } catch (e) {\n        console.error('Failed to parse JSON:', event.data, e);\n        return;\n      }\n      if (data.offer) {\n        var _ws$current;\n        // We become the callee\n        console.log('Got offer:', data.offer);\n        if (pc.signalingState !== 'stable') {\n          console.warn('Received offer while not stable.');\n          return;\n        }\n        await pc.setRemoteDescription(new RTCSessionDescription(data.offer));\n        const answer = await pc.createAnswer();\n        await pc.setLocalDescription(answer);\n        (_ws$current = ws.current) === null || _ws$current === void 0 ? void 0 : _ws$current.send(JSON.stringify({\n          answer\n        }));\n      } else if (data.answer) {\n        // We received an answer to our offer\n        console.log('Got answer:', data.answer);\n        await pc.setRemoteDescription(new RTCSessionDescription(data.answer));\n      } else if (data.ice) {\n        // Received ICE candidate\n        try {\n          await pc.addIceCandidate(data.ice);\n        } catch (err) {\n          console.error('Error adding ICE candidate', err);\n        }\n      }\n    };\n\n    // 5) Send ICE candidates to the other peer\n    pc.onicecandidate = event => {\n      if (event.candidate) {\n        var _ws$current2;\n        (_ws$current2 = ws.current) === null || _ws$current2 === void 0 ? void 0 : _ws$current2.send(JSON.stringify({\n          ice: event.candidate\n        }));\n      }\n    };\n\n    // 6) Get local camera stream\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      // Show local video\n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = stream;\n      }\n      // Add tracks to PeerConnection\n      stream.getTracks().forEach(track => {\n        pc.addTrack(track, stream);\n      });\n    }).catch(error => {\n      console.error('Error accessing camera:', error);\n    });\n\n    // 7) If we're the caller, create an offer once WS is open\n    ws.current.onopen = () => {\n      console.log('WebSocket onopen! isCaller=', isCaller);\n      if (isCaller) {\n        // We send the offer\n        setTimeout(async () => {\n          if (pc.signalingState === 'stable') {\n            try {\n              var _ws$current3;\n              const offer = await pc.createOffer();\n              await pc.setLocalDescription(offer);\n              (_ws$current3 = ws.current) === null || _ws$current3 === void 0 ? void 0 : _ws$current3.send(JSON.stringify({\n                offer\n              }));\n              console.log('Offer sent:', offer);\n            } catch (error) {\n              console.error('Error creating offer:', error);\n            }\n          }\n        }, Math.random() * 500); // optional random delay\n      }\n    };\n\n    // Cleanup\n    return () => {\n      var _ws$current4;\n      pc.close();\n      (_ws$current4 = ws.current) === null || _ws$current4 === void 0 ? void 0 : _ws$current4.close();\n    };\n  }, [isCaller]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Two-Tab Video Call (Hardcoded Caller/Callee)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"isCaller = \", String(isCaller)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), \"Change this boolean to \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 32\n      }, this), \" in one tab, \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"false\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 62\n      }, this), \" in the other.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Local Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoRef,\n          autoPlay: true,\n          playsInline: true,\n          muted: true,\n          style: {\n            width: '300px',\n            backgroundColor: 'black'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Remote Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: remoteVideoRef,\n          autoPlay: true,\n          playsInline: true,\n          style: {\n            width: '300px',\n            backgroundColor: 'black'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCall, \"rg3Bi1UVGjgM3fZiJ8p5CLXIJfo=\");\n_c = VideoCall;\nexport default VideoCall;\nvar _c;\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","VideoCall","_s","localVideoRef","remoteVideoRef","peerConnection","setPeerConnection","ws","isCaller","pc","RTCPeerConnection","iceServers","urls","ontrack","event","current","srcObject","streams","WebSocket","onmessage","data","console","warn","JSON","parse","e","error","offer","_ws$current","log","signalingState","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","send","stringify","ice","addIceCandidate","err","onicecandidate","candidate","_ws$current2","navigator","mediaDevices","getUserMedia","video","then","stream","getTracks","forEach","track","addTrack","catch","onopen","setTimeout","_ws$current3","createOffer","Math","random","_ws$current4","close","children","fileName","_jsxFileName","lineNumber","columnNumber","String","style","display","gap","ref","autoPlay","playsInline","muted","width","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/himat/OneDrive/desktop/BeAbled/aslproject/webrtc-asl/src/VideoCall.tsx"],"sourcesContent":["// src/VideoCall.tsx\r\nimport React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst VideoCall: React.FC = () => {\r\n  const localVideoRef = useRef<HTMLVideoElement | null>(null);\r\n  const remoteVideoRef = useRef<HTMLVideoElement | null>(null);\r\n  const [peerConnection, setPeerConnection] = useState<RTCPeerConnection | null>(null);\r\n  const ws = useRef<WebSocket | null>(null);\r\n\r\n  // Hardcode one tab to be caller, the other tab to be callee\r\n  // For the \"caller\" tab, set isCaller = true\r\n  // For the \"callee\" tab, set isCaller = false\r\n  const isCaller = true;\r\n\r\n  useEffect(() => {\r\n    // 1) Create RTCPeerConnection with a public STUN server\r\n    const pc = new RTCPeerConnection({\r\n      iceServers: [{ urls: 'stun:stun.l.google.com:19302' }],\r\n    });\r\n    setPeerConnection(pc);\r\n\r\n    // 2) Handle remote stream\r\n    pc.ontrack = (event) => {\r\n      if (remoteVideoRef.current) {\r\n        remoteVideoRef.current.srcObject = event.streams[0];\r\n      }\r\n    };\r\n\r\n    // 3) Connect to WebSocket signaling server\r\n    ws.current = new WebSocket('ws://localhost:8080');\r\n\r\n    // 4) When we receive a message, handle offer/answer/ice\r\n    ws.current.onmessage = async (event) => {\r\n      // Skip non-string data (like Blobs)\r\n      if (typeof event.data !== 'string') {\r\n        console.warn('Non-text message, ignoring:', event.data);\r\n        return;\r\n      }\r\n\r\n      let data;\r\n      try {\r\n        data = JSON.parse(event.data);\r\n      } catch (e) {\r\n        console.error('Failed to parse JSON:', event.data, e);\r\n        return;\r\n      }\r\n\r\n      if (data.offer) {\r\n        // We become the callee\r\n        console.log('Got offer:', data.offer);\r\n        if (pc.signalingState !== 'stable') {\r\n          console.warn('Received offer while not stable.');\r\n          return;\r\n        }\r\n        await pc.setRemoteDescription(new RTCSessionDescription(data.offer));\r\n        const answer = await pc.createAnswer();\r\n        await pc.setLocalDescription(answer);\r\n        ws.current?.send(JSON.stringify({ answer }));\r\n      } else if (data.answer) {\r\n        // We received an answer to our offer\r\n        console.log('Got answer:', data.answer);\r\n        await pc.setRemoteDescription(new RTCSessionDescription(data.answer));\r\n      } else if (data.ice) {\r\n        // Received ICE candidate\r\n        try {\r\n          await pc.addIceCandidate(data.ice);\r\n        } catch (err) {\r\n          console.error('Error adding ICE candidate', err);\r\n        }\r\n      }\r\n    };\r\n\r\n    // 5) Send ICE candidates to the other peer\r\n    pc.onicecandidate = (event) => {\r\n      if (event.candidate) {\r\n        ws.current?.send(JSON.stringify({ ice: event.candidate }));\r\n      }\r\n    };\r\n\r\n    // 6) Get local camera stream\r\n    navigator.mediaDevices.getUserMedia({ video: true })\r\n      .then((stream) => {\r\n        // Show local video\r\n        if (localVideoRef.current) {\r\n          localVideoRef.current.srcObject = stream;\r\n        }\r\n        // Add tracks to PeerConnection\r\n        stream.getTracks().forEach((track) => {\r\n          pc.addTrack(track, stream);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error accessing camera:', error);\r\n      });\r\n\r\n    // 7) If we're the caller, create an offer once WS is open\r\n    ws.current.onopen = () => {\r\n      console.log('WebSocket onopen! isCaller=', isCaller);\r\n      if (isCaller) {\r\n        // We send the offer\r\n        setTimeout(async () => {\r\n          if (pc.signalingState === 'stable') {\r\n            try {\r\n              const offer = await pc.createOffer();\r\n              await pc.setLocalDescription(offer);\r\n              ws.current?.send(JSON.stringify({ offer }));\r\n              console.log('Offer sent:', offer);\r\n            } catch (error) {\r\n              console.error('Error creating offer:', error);\r\n            }\r\n          }\r\n        }, Math.random() * 500); // optional random delay\r\n      }\r\n    };\r\n\r\n    // Cleanup\r\n    return () => {\r\n      pc.close();\r\n      ws.current?.close();\r\n    };\r\n  }, [isCaller]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Two-Tab Video Call (Hardcoded Caller/Callee)</h2>\r\n      <p>\r\n        <strong>isCaller = {String(isCaller)}</strong> \r\n        <br />\r\n        Change this boolean to <code>true</code> in one tab, <code>false</code> in the other.\r\n      </p>\r\n      <div style={{ display: 'flex', gap: '1rem' }}>\r\n        <div>\r\n          <h3>Local Video</h3>\r\n          <video\r\n            ref={localVideoRef}\r\n            autoPlay\r\n            playsInline\r\n            muted\r\n            style={{ width: '300px', backgroundColor: 'black' }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h3>Remote Video</h3>\r\n          <video\r\n            ref={remoteVideoRef}\r\n            autoPlay\r\n            playsInline\r\n            style={{ width: '300px', backgroundColor: 'black' }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCall;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}