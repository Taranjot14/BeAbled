{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\himat\\\\OneDrive\\\\desktop\\\\BeAbled\\\\websocket\\\\webrtc-asl\\\\src\\\\VideoCall.tsx\",\n  _s = $RefreshSig$();\n// src/VideoCall.tsx\nimport React, { useEffect, useRef, useState } from 'react';\nimport './VideoCall.css'; // optional: for styling\n\n// Placeholder function to simulate ASL detection\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction runASLDetection(frame) {\n  // Here you would extract the frame, process it with your model,\n  // and overlay results on the canvas or update state.\n  console.log('Running ASL detection on frame...');\n  // For example, you might draw some text on the canvas:\n  const ctx = frame.getContext('2d');\n  if (ctx) {\n    ctx.font = '24px Arial';\n    ctx.fillStyle = 'red';\n    ctx.fillText('ASL Detected', 10, 30);\n  }\n}\nconst VideoCall = () => {\n  _s();\n  // Determine role via URL parameter: ?caller=1 means caller, otherwise callee.\n  const params = new URLSearchParams(window.location.search);\n  const isCaller = params.get('caller') === '1';\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const canvasRef = useRef(null); // Canvas for ASL overlay\n  const [peerConnection, setPeerConnection] = useState(null);\n  const ws = useRef(null);\n  const [aslActive, setAslActive] = useState(false); // Toggle for ASL detection\n\n  useEffect(() => {\n    // 1. Create RTCPeerConnection with a public STUN server.\n    const pc = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }]\n    });\n    setPeerConnection(pc);\n\n    // 2. Handle remote stream.\n    pc.ontrack = event => {\n      if (remoteVideoRef.current) {\n        remoteVideoRef.current.srcObject = event.streams[0];\n      }\n    };\n\n    // 3. Connect to the WebSocket signaling server.\n    ws.current = new WebSocket('ws://localhost:8080');\n    ws.current.onmessage = async event => {\n      if (typeof event.data !== 'string') {\n        console.warn('Received non-text message, ignoring:', event.data);\n        return;\n      }\n      let data;\n      try {\n        data = JSON.parse(event.data);\n      } catch (e) {\n        console.error('Failed to parse JSON:', event.data, e);\n        return;\n      }\n      if (data.offer) {\n        var _ws$current;\n        console.log('Got offer:', data.offer);\n        if (pc.signalingState !== 'stable') {\n          console.warn('Received offer while not stable.');\n          return;\n        }\n        await pc.setRemoteDescription(new RTCSessionDescription(data.offer));\n        const answer = await pc.createAnswer();\n        await pc.setLocalDescription(answer);\n        (_ws$current = ws.current) === null || _ws$current === void 0 ? void 0 : _ws$current.send(JSON.stringify({\n          answer\n        }));\n      } else if (data.answer) {\n        console.log('Got answer:', data.answer);\n        await pc.setRemoteDescription(new RTCSessionDescription(data.answer));\n      } else if (data.ice) {\n        try {\n          await pc.addIceCandidate(data.ice);\n        } catch (err) {\n          console.error('Error adding ICE candidate', err);\n        }\n      }\n    };\n\n    // 4. Send ICE candidates as they are gathered.\n    pc.onicecandidate = event => {\n      if (event.candidate) {\n        var _ws$current2;\n        (_ws$current2 = ws.current) === null || _ws$current2 === void 0 ? void 0 : _ws$current2.send(JSON.stringify({\n          ice: event.candidate\n        }));\n      }\n    };\n\n    // 5. Get the local media stream (video only) and add tracks to the RTCPeerConnection.\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = stream;\n      }\n      stream.getTracks().forEach(track => {\n        pc.addTrack(track, stream);\n      });\n    }).catch(error => {\n      console.error('Error accessing camera:', error);\n    });\n\n    // 6. If this peer is the caller, create an offer when WebSocket is open.\n    ws.current.onopen = () => {\n      console.log('WebSocket onopen! isCaller =', isCaller);\n      if (isCaller) {\n        setTimeout(async () => {\n          if (pc.signalingState === 'stable') {\n            try {\n              var _ws$current3;\n              const offer = await pc.createOffer();\n              await pc.setLocalDescription(offer);\n              (_ws$current3 = ws.current) === null || _ws$current3 === void 0 ? void 0 : _ws$current3.send(JSON.stringify({\n                offer\n              }));\n              console.log('Offer sent:', offer);\n            } catch (error) {\n              console.error('Error creating offer:', error);\n            }\n          }\n        }, Math.random() * 500);\n      }\n    };\n\n    // Cleanup on unmount.\n    return () => {\n      var _ws$current4;\n      pc.close();\n      (_ws$current4 = ws.current) === null || _ws$current4 === void 0 ? void 0 : _ws$current4.close();\n    };\n  }, [isCaller]);\n\n  // ASL Detection: If activated, periodically process the local video frame.\n  useEffect(() => {\n    let intervalId;\n    if (aslActive && localVideoRef.current && canvasRef.current) {\n      // Set up a canvas overlay on top of the local video.\n      intervalId = window.setInterval(() => {\n        const video = localVideoRef.current;\n        const canvas = canvasRef.current;\n        // Set canvas dimensions to match video.\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n          // Draw current video frame onto the canvas.\n          ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n          // Run ASL detection on the canvas.\n          runASLDetection(canvas);\n        }\n      }, 1000); // Process frame every second.\n    }\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [aslActive]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-call-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Two-Tab Video Call Demo with ASL Detection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Role:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), \" \", isCaller ? 'Caller' : 'Callee']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setAslActive(prev => !prev),\n        children: aslActive ? 'Stop ASL Detection' : 'Start ASL Detection'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Local Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoRef,\n          autoPlay: true,\n          playsInline: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), aslActive && /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Remote Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: remoteVideoRef,\n          autoPlay: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCall, \"i0sSsowL+mUhzeA9BJ/rL+OCs+Y=\");\n_c = VideoCall;\nexport default VideoCall;\nvar _c;\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","runASLDetection","frame","console","log","ctx","getContext","font","fillStyle","fillText","VideoCall","_s","params","URLSearchParams","window","location","search","isCaller","get","localVideoRef","remoteVideoRef","canvasRef","peerConnection","setPeerConnection","ws","aslActive","setAslActive","pc","RTCPeerConnection","iceServers","urls","ontrack","event","current","srcObject","streams","WebSocket","onmessage","data","warn","JSON","parse","e","error","offer","_ws$current","signalingState","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","send","stringify","ice","addIceCandidate","err","onicecandidate","candidate","_ws$current2","navigator","mediaDevices","getUserMedia","video","then","stream","getTracks","forEach","track","addTrack","catch","onopen","setTimeout","_ws$current3","createOffer","Math","random","_ws$current4","close","intervalId","setInterval","canvas","width","videoWidth","height","videoHeight","drawImage","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","prev","ref","autoPlay","playsInline","muted","style","position","top","left","_c","$RefreshReg$"],"sources":["C:/Users/himat/OneDrive/desktop/BeAbled/websocket/webrtc-asl/src/VideoCall.tsx"],"sourcesContent":["// src/VideoCall.tsx\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport './VideoCall.css'; // optional: for styling\r\n\r\n// Placeholder function to simulate ASL detection\r\nfunction runASLDetection(frame: HTMLCanvasElement) {\r\n  // Here you would extract the frame, process it with your model,\r\n  // and overlay results on the canvas or update state.\r\n  console.log('Running ASL detection on frame...');\r\n  // For example, you might draw some text on the canvas:\r\n  const ctx = frame.getContext('2d');\r\n  if (ctx) {\r\n    ctx.font = '24px Arial';\r\n    ctx.fillStyle = 'red';\r\n    ctx.fillText('ASL Detected', 10, 30);\r\n  }\r\n}\r\n\r\nconst VideoCall: React.FC = () => {\r\n  // Determine role via URL parameter: ?caller=1 means caller, otherwise callee.\r\n  const params = new URLSearchParams(window.location.search);\r\n  const isCaller = params.get('caller') === '1';\r\n\r\n  const localVideoRef = useRef<HTMLVideoElement | null>(null);\r\n  const remoteVideoRef = useRef<HTMLVideoElement | null>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement | null>(null); // Canvas for ASL overlay\r\n  const [peerConnection, setPeerConnection] = useState<RTCPeerConnection | null>(null);\r\n  const ws = useRef<WebSocket | null>(null);\r\n  const [aslActive, setAslActive] = useState(false); // Toggle for ASL detection\r\n\r\n  useEffect(() => {\r\n    // 1. Create RTCPeerConnection with a public STUN server.\r\n    const pc = new RTCPeerConnection({\r\n      iceServers: [{ urls: 'stun:stun.l.google.com:19302' }],\r\n    });\r\n    setPeerConnection(pc);\r\n\r\n    // 2. Handle remote stream.\r\n    pc.ontrack = (event) => {\r\n      if (remoteVideoRef.current) {\r\n        remoteVideoRef.current.srcObject = event.streams[0];\r\n      }\r\n    };\r\n\r\n    // 3. Connect to the WebSocket signaling server.\r\n    ws.current = new WebSocket('ws://localhost:8080');\r\n\r\n    ws.current.onmessage = async (event) => {\r\n      if (typeof event.data !== 'string') {\r\n        console.warn('Received non-text message, ignoring:', event.data);\r\n        return;\r\n      }\r\n      let data;\r\n      try {\r\n        data = JSON.parse(event.data);\r\n      } catch (e) {\r\n        console.error('Failed to parse JSON:', event.data, e);\r\n        return;\r\n      }\r\n      if (data.offer) {\r\n        console.log('Got offer:', data.offer);\r\n        if (pc.signalingState !== 'stable') {\r\n          console.warn('Received offer while not stable.');\r\n          return;\r\n        }\r\n        await pc.setRemoteDescription(new RTCSessionDescription(data.offer));\r\n        const answer = await pc.createAnswer();\r\n        await pc.setLocalDescription(answer);\r\n        ws.current?.send(JSON.stringify({ answer }));\r\n      } else if (data.answer) {\r\n        console.log('Got answer:', data.answer);\r\n        await pc.setRemoteDescription(new RTCSessionDescription(data.answer));\r\n      } else if (data.ice) {\r\n        try {\r\n          await pc.addIceCandidate(data.ice);\r\n        } catch (err) {\r\n          console.error('Error adding ICE candidate', err);\r\n        }\r\n      }\r\n    };\r\n\r\n    // 4. Send ICE candidates as they are gathered.\r\n    pc.onicecandidate = (event) => {\r\n      if (event.candidate) {\r\n        ws.current?.send(JSON.stringify({ ice: event.candidate }));\r\n      }\r\n    };\r\n\r\n    // 5. Get the local media stream (video only) and add tracks to the RTCPeerConnection.\r\n    navigator.mediaDevices.getUserMedia({ video: true })\r\n      .then((stream) => {\r\n        if (localVideoRef.current) {\r\n          localVideoRef.current.srcObject = stream;\r\n        }\r\n        stream.getTracks().forEach((track) => {\r\n          pc.addTrack(track, stream);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error accessing camera:', error);\r\n      });\r\n\r\n    // 6. If this peer is the caller, create an offer when WebSocket is open.\r\n    ws.current.onopen = () => {\r\n      console.log('WebSocket onopen! isCaller =', isCaller);\r\n      if (isCaller) {\r\n        setTimeout(async () => {\r\n          if (pc.signalingState === 'stable') {\r\n            try {\r\n              const offer = await pc.createOffer();\r\n              await pc.setLocalDescription(offer);\r\n              ws.current?.send(JSON.stringify({ offer }));\r\n              console.log('Offer sent:', offer);\r\n            } catch (error) {\r\n              console.error('Error creating offer:', error);\r\n            }\r\n          }\r\n        }, Math.random() * 500);\r\n      }\r\n    };\r\n\r\n    // Cleanup on unmount.\r\n    return () => {\r\n      pc.close();\r\n      ws.current?.close();\r\n    };\r\n  }, [isCaller]);\r\n\r\n  // ASL Detection: If activated, periodically process the local video frame.\r\n  useEffect(() => {\r\n    let intervalId: number;\r\n    if (aslActive && localVideoRef.current && canvasRef.current) {\r\n      // Set up a canvas overlay on top of the local video.\r\n      intervalId = window.setInterval(() => {\r\n        const video = localVideoRef.current!;\r\n        const canvas = canvasRef.current!;\r\n        // Set canvas dimensions to match video.\r\n        canvas.width = video.videoWidth;\r\n        canvas.height = video.videoHeight;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n          // Draw current video frame onto the canvas.\r\n          ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n          // Run ASL detection on the canvas.\r\n          runASLDetection(canvas);\r\n        }\r\n      }, 1000); // Process frame every second.\r\n    }\r\n    return () => {\r\n      if (intervalId) {\r\n        clearInterval(intervalId);\r\n      }\r\n    };\r\n  }, [aslActive]);\r\n\r\n  return (\r\n    <div className=\"video-call-container\">\r\n      <div className=\"header\">\r\n        <h2>Two-Tab Video Call Demo with ASL Detection</h2>\r\n        <p>\r\n          <strong>Role:</strong> {isCaller ? 'Caller' : 'Callee'}\r\n        </p>\r\n        <button onClick={() => setAslActive(prev => !prev)}>\r\n          {aslActive ? 'Stop ASL Detection' : 'Start ASL Detection'}\r\n        </button>\r\n      </div>\r\n      <div className=\"video-container\">\r\n        <div className=\"video-box\">\r\n          <h3>Local Video</h3>\r\n          <video ref={localVideoRef} autoPlay playsInline muted />\r\n          {/* Canvas overlay for ASL detection results */}\r\n          {aslActive && <canvas ref={canvasRef} style={{ position: 'absolute', top: 0, left: 0 }} />}\r\n        </div>\r\n        <div className=\"video-box\">\r\n          <h3>Remote Video</h3>\r\n          <video ref={remoteVideoRef} autoPlay playsInline />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCall;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}